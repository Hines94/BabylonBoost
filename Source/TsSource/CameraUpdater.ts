import { FlyingPlayerController, PlayerCoreComponent } from "@engine/Autogenerated/babylonboost_ServerTypings_autogenerated";
import { PlayerCamera } from "@engine/Camera/PlayerCamera";
import { EntTransform, EntVector3 } from "@engine/EntitySystem/CoreComponents";
import { GameEcosystem } from "@engine/GameEcosystem";
import { serverConnection } from "@engine/Networking/ServerConnection";


export function UpdateCamera(ecosystem:GameEcosystem) {
    if(serverConnection === undefined) {
        return;
    }
    //Find our player object
    const ents = ecosystem.wasmWrapper.GetEntitiesWithData([PlayerCoreComponent],[],false);
    const allEntKeys = Object.keys(ents);
    var ourPlayerEnt:number = undefined;
    for(var i = 0; i < allEntKeys.length;i++) {
        const entId = parseInt(allEntKeys[i]);
        const playerCore = ents[entId]["PlayerCoreComponent"] as PlayerCoreComponent;
        if(playerCore.Playeruuid !== ecosystem.wasmWrapper.GetplayerId()) {
            continue;
        }
        ourPlayerEnt = entId;
        break;
    }
    
    if(!ourPlayerEnt) {
        return;
    }

    const flyingPlayer = ents[ourPlayerEnt]["FlyingPlayerController"] as FlyingPlayerController;

    const pawn = ecosystem.wasmWrapper.GetDataForEntity(flyingPlayer.CurrentControllingEntity);
    if(!pawn){
        return;
    }

    const transformData = pawn["EntTransform"] as EntTransform;
    if(!transformData) {
        return;
    }

    const playerCam = ecosystem.camera as PlayerCamera;
    playerCam.UpdateCamera(EntVector3.GetVector3(transformData.Position),transformData.Rotation,ecosystem);
}