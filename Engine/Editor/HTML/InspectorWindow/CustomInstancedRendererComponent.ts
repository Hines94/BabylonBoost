import { JSONEditor, CustomInspectorComp, RequiresSetupForCustom } from "./CustomInspectorComponents";
import { FindModelForParams, ModelPaths } from "../../Utils/EditorModelSpecifier";
import { InstancedRender } from "@BabylonBurstClient/Autogenerated/babylonburst_ServerTypings_autogenerated";

/** Warns if material numbers not correct */
export class CustomInstancedRenderInspectorComp implements CustomInspectorComp {
    BuildCustomElement(editor: JSONEditor): boolean {
        if(!RequiresSetupForCustom("InstancedRender",editor)) {
            return false;
        }
        ProcessInstancedRenderComp(editor);
        return true;
    }
}

function ProcessInstancedRenderComp(renderEditor:JSONEditor){
    //Create warning if material number not same as material number for 
    const warning = renderEditor.root_container.ownerDocument.createElement("div");
    warning.className = "alert alert-danger";
    renderEditor.root_container.querySelector('[data-schemapath="root.MaterialData"]').appendChild(warning)

    renderEditor.on("change",refreshMaterialsNumWarning)
    refreshMaterialsNumWarning();


    function refreshMaterialsNumWarning() {
        const val = renderEditor.getValue() as InstancedRender;
        const modelSpecifier = FindModelForParams(val.ModelData);
        if (modelSpecifier) {
            warning.hidden = true;
            if (val.MaterialData && modelSpecifier.materialsNum !== val.MaterialData.length) {
                warning.hidden = false;
                warning.innerText = "Incorrect number of materials. Model specifies " + modelSpecifier.materialsNum;
                console.log("SHOW")
            }
        } else {
            warning.hidden = true;
        }
    }
}